lty=c(1,1),
lwd=c(2.5,2.5),
col=c('blue','black','green'),
cex=fntsz
)
max(2,3,4)
y_max <- max(theta_prior_pdf,theta_Jeffreys_prior_pdf,theta_Laplace_prior_pdf)
y_max
theta_prior_pdf
theta_Jeffreys_prior_pdf
,theta_Laplace_prior_pdf
theta_Laplace_prior_pdf
inf.omit(c(inf,3))
is.finite(c(inf,3))
is.finite(c(+inf,3))
inf
infinity
y_max <- c(theta_prior_pdf,theta_Jeffreys_prior_pdf,theta_Laplace_prior_pdf) ;
y_max <- y_max[is.finite(y_max)]
y_max
y_max <- max(y_max)
y_max <- max(y_max)
y_max
get_randnumb <-function(n) {
u <- seq(0.001,0.999,length.out = n)
#  u <- runif(0,1,n = n)
}
#library(rmutil)
dbetabinom <- function (y, size, m, s, log = FALSE) {
# from rmutil package
if (any(y < 0))
stop("y must contain non-negative values")
if (any(size < 0))
stop("size must contain non-negative values")
if (any(m <= 0) || any(m >= 1))
stop("m must lie between 0 and 1")
if (any(s <= 0))
stop("s must be positive")
ly <- max(length(y), length(m), length(s), length(size))
if (length(y) != ly) {
if (length(y) == 1)
y <- rep(y, ly)
else stop("length of y incorrect")
}
if (length(size) != ly) {
if (length(size) == 1)
size <- rep(size, ly)
else stop("size must be the same length as y")
}
if (any(y > size))
stop("y must be <= size")
if (length(m) != ly) {
if (length(m) == 1)
m <- rep(m, ly)
else stop("m and y must have the same length")
}
if (length(s) != ly) {
if (length(s) == 1)
s <- rep(s, ly)
else stop("s and y must have the same length")
}
t <- s * m
u <- s * (1 - m)
tmp <- lbeta(y + t, size - y + u) - lbeta(t, u) + lchoose(size,
y)
if (!log)
tmp <- exp(tmp)
tmp
}
BinomialBeta_pdf<-function(x,a,b,n) {
pdf <- dbetabinom(y=x, size=n, m=a/(a+b), s=a+b) ;
return (pdf)
}
get_randnumb <-function(n) {
u <- seq(0.001,0.999,length.out = n)
#  u <- runif(0,1,n = n)
}
#library(rmutil)
dbetabinom <- function (y, size, m, s, log = FALSE) {
# from rmutil package
if (any(y < 0))
stop("y must contain non-negative values")
if (any(size < 0))
stop("size must contain non-negative values")
if (any(m <= 0) || any(m >= 1))
stop("m must lie between 0 and 1")
if (any(s <= 0))
stop("s must be positive")
ly <- max(length(y), length(m), length(s), length(size))
if (length(y) != ly) {
if (length(y) == 1)
y <- rep(y, ly)
else stop("length of y incorrect")
}
if (length(size) != ly) {
if (length(size) == 1)
size <- rep(size, ly)
else stop("size must be the same length as y")
}
if (any(y > size))
stop("y must be <= size")
if (length(m) != ly) {
if (length(m) == 1)
m <- rep(m, ly)
else stop("m and y must have the same length")
}
if (length(s) != ly) {
if (length(s) == 1)
s <- rep(s, ly)
else stop("s and y must have the same length")
}
t <- s * m
u <- s * (1 - m)
tmp <- lbeta(y + t, size - y + u) - lbeta(t, u) + lchoose(size,
y)
if (!log)
tmp <- exp(tmp)
tmp
}
BinomialBeta_pdf<-function(x,a,b,n) {
pdf <- dbetabinom(y=x, size=n, m=a/(a+b), s=a+b) ;
return (pdf)
}
StudentT_pdf<-function(x,mu,lam,al) {
pdf <- 0.5*log(lam) -0.5*log(al) -0.5*log(pi) ;
pdf <- pdf +lgamma(0.5*(al+1)) -lgamma(0.5*al) ;
pdf <- pdf -0.5*(al+1)*log(1+lam/al*(x-mu)^2) ;
pdf <- exp(pdf) ;
return (pdf)
}
dinvgamma <- function(x, a, b){
return ( exp( a*log(b)-lgamma(a) -(a+1)*log(x) -b/x ) ) ;
}
NormalModel_SufStat<-function(x,n) {
xx <- mean(x[1:n])
yy <- mean((x[1:n]-xx)^2)
sufstat <- c(xx,yy) ;
}
NormalModel_PDF_meanvar_prior<-function(mu,vu,mu0,n0,a0,b0) {
vu0 <- vu/n0 ;
pdf <- dnorm( mu, mean=mu0, sd=sqrt(vu0)) * dinvgamma(vu, a0, b0) ;
return (pdf)
}
NormalModel_PDF_meanvar_post<-function(mu,vu,n,sufstat,mu0,n0,a0,b0) {
if (n==0) {
pdf <- NormalModel_PDF_meanvar_prior(mu,vu,mu0,n0,a0,b0) ;
return (pdf) ;
}
x_mean <- sufstat[1] ;
x_var <- sufstat[2] ;
n_hat <- n0+n ;
a_hat <-a0+0.5*n ;
b_hat <- b0+0.5*n*x_var+0.5*n0*n*((mu0-x_mean)^2)/(n0+n) ;
mu_hat <- (n0*mu0+n*x_mean)/(n0+n) ;
vu_hat <- vu/n_hat
pdf <- dnorm( mu, mean=mu_hat, sd=sqrt(vu_hat) )*dinvgamma(vu,a_hat,b_hat) ;
return (pdf)
}
NormalModel_PDF_var_prior<-function(vu,a0,b0) {
pdf <- dinvgamma(vu,a0,b0) ;
return (pdf)
}
NormalModel_PDF_var_post<-function(vu,n,sufstat,mu0,n0,a0,b0) {
if (n==0) {
pdf <- NormalModel_PDF_var_prior(vu,a0,b0) ;
return (pdf) ;
}
x_mean <- sufstat[1] ;
x_var <- sufstat[2] ;
a_hat <-a0+0.5*n ;
b_hat <- b0+0.5*n*x_var+0.5*n0*n*((mu0-x_mean)^2)/(n0+n) ;
pdf <- dinvgamma( vu, a_hat, b_hat) ;
return (pdf)
}
NormalModel_PDF_mean_prior<-function(mu,mu0,n0,a0,b0) {
pdf <- StudentT_pdf(mu, mu0, n0*a0/b0, 2*a0) ;
return (pdf)
}
NormalModel_PDF_mean_post<-function(mu,n,sufstat,mu0,n0,a0,b0) {
if (n==0) {
pdf <- NormalModel_PDF_mean_prior(mu,mu0,n0,a0,b0) ;
return (pdf) ;
}
x_mean <- sufstat[1] ;
x_var <- sufstat[2] ;
n_hat <- n0+n ;
a_hat <-a0+0.5*n ;
b_hat <- b0+0.5*n*x_var+0.5*n0*n*((mu0-x_mean)^2)/(n0+n) ;
mu_hat <- (n0*mu0+n*x_mean)/(n0+n) ;
pdf <- StudentT_pdf(mu, mu_hat, (n+n0)*a_hat/b_hat, 2*a_hat) ;
return (pdf)
}
NormalModel_PDF_pred<-function(x,n,sufstat,mu0,n0,a0,b0) {
if (n==0) {
pdf <- StudentT_pdf(x, mu0, n0/(n0+1)*a0/b0, 2*a0) ;
return (pdf) ;
}
x_mean <- sufstat[1] ;
x_var <- sufstat[2] ;
n_hat <- n0+n ;
a_hat <-a0+0.5*n ;
b_hat <- b0+0.5*n*x_var+0.5*n0*n*((mu0-x_mean)^2)/(n0+n) ;
mu_hat <- (n0*mu0+n*x_mean)/(n0+n) ;
pdf <- StudentT_pdf(x, mu_hat, (n+n0)/(n+n0+1)*a_hat/b_hat, 2*a_hat) ;
return (pdf)
}
plot_Normal_param <- function(mu=0.0,
vu=1.0,
n=10,
mu0=0.0,
n0=1.0,
a0=1.5,
b0=1.5) {
#  mu=0.0;
#  vu=1.0;
#  n=10;
#  mu0=0.0;
#  n0=1.0;
#  a0=1.5;
#  b0=1.5;
fntsz <- 1.5;
op <- par(cex = fntsz)
obs <-get_randnumb(n) ;
obs <- mu+sqrt(vu)*qnorm(obs,mean=0.0,sd=1.0) ;
sufstat <- NormalModel_SufStat(obs,n) ;
x_vu <- seq(from = 0.00, to = 10, length.out = 50) ;
vu_prior_pdf <- NormalModel_PDF_var_prior(x_vu,a0,b0) ;
vu_post_pdf <- NormalModel_PDF_var_post(x_vu,n,sufstat,mu0,n0,a0,b0) ;
x_mu <- seq(from = -6, to = 6, length.out = 50) ;
mu_prior_pdf <- NormalModel_PDF_mean_prior(x_mu,mu0,n0,a0,b0) ;
mu_post_pdf <- NormalModel_PDF_mean_post(x_mu,n,sufstat,mu0,n0,a0,b0) ;
muvu_prior_pdf <- matrix(rep(NaN,50*50),50,50) ;
muvu_post_pdf <- muvu_prior_pdf ;
for (i in 1:50)
for (j in 1:50) {
muvu_prior_pdf[i,j] <- NormalModel_PDF_meanvar_prior(x_mu[i],x_vu[j],mu0,n0,a0,b0) ;
muvu_post_pdf[i,j] <- NormalModel_PDF_meanvar_post(x_mu[i],x_vu[j],n,sufstat,mu0,n0,a0,b0) ;
}
x_pred <- seq(from = -6, to = 6, length.out = 50) ;
xnew_pred_pdf <- NormalModel_PDF_pred(x_pred,n,sufstat,mu0,n0,a0,b0) ;
#layout( cbind( matrix(1,4,4), matrix(2,4,4), matrix(3,4,4) , matrix(4,4,4) ) )
par(mfrow = c(2 , 2) )
# about mu
y_max <- max(mu_post_pdf, mu_prior_pdf) ;
y_max <- y_max[is.finite(y_max)]
y_max <- max(y_max)
plot(x_mu,
mu_post_pdf,
type = "l",
main='Marginal Posterior vs Prior PDF',
xlab = expression(mu),
ylab = expression(paste(pi,"(",mu,"|",x[1:n],")", " and " ,pi,"(",mu,")")),
col="blue" ,
ylim = c(0,y_max+1) ,
cex.lab=fntsz,
cex.axis=fntsz,
cex.main=fntsz,
cex.sub=fntsz) ;
lines(x_mu,
mu_prior_pdf,
type = "l",
xlab = expression(mu),
ylab = expression(paste(pi,"(",mu,"|",x[1:n],")", " and " ,pi,"(",mu,")")),
col="green" ,
cex.lab=fntsz,
cex.axis=fntsz,
cex.main=fntsz,
cex.sub=fntsz) ;
abline(v=mu,
col="purple")
legend('topright',
c('Posterior','Prior',expression(paste(mu, " real value"))),
bg="transparent",
lty=c(1,1),
lwd=c(2.5,2.5),
col=c('blue','green','purple'),
cex=fntsz
)
# about sigma
y_max <- max(vu_post_pdf, vu_prior_pdf) ;
y_max <- y_max[is.finite(y_max)]
y_max <- max(y_max)
plot(x_vu,
vu_post_pdf,
type = "l",
main='Marginal Posterior vs Prior PDF',
xlab = expression(sigma^2),
ylab = expression(paste(pi,"(",sigma^2,"|",x[1:n],")", " and ",pi,"(",sigma^2,")")),
col="blue" ,
ylim = c(0,y_max+1),
cex.lab=fntsz,
cex.axis=fntsz,
cex.main=fntsz,
cex.sub=fntsz) ;
lines(x_vu,
vu_prior_pdf,
type = "l",
col="green" ,
cex.lab=fntsz,
cex.axis=fntsz,
cex.main=fntsz,
cex.sub=fntsz) ;
abline(v=vu,
col="purple")
legend('topright',
c('Posterior','Prior',expression(paste(sigma^2, " real value"))),
bg="transparent",
lty=c(1,1),
lwd=c(2.5,2.5),
col=c('blue','green','purple'),
cex=fntsz
)
# about joint prior
contour(x = x_mu,
y = x_vu,
z = muvu_prior_pdf,
col="green",
plot.title = title(main = "Joint Prior PDF",
xlab = expression(mu),
ylab = expression(sigma^2),
cex.lab=fntsz,
cex.axis=fntsz,
cex.main=fntsz,
cex.sub=fntsz
),
cex.lab=fntsz,
cex.axis=fntsz,
cex.main=fntsz,
cex.sub=fntsz,
labcex=fntsz
) ;
contour(x = x_mu,
y = x_vu,
z = muvu_post_pdf,
col="blue",
plot.title = title(main = "Joint Posterior PDF",
xlab = expression(mu),
ylab = expression(sigma^2),
cex.lab=fntsz,
cex.axis=fntsz,
cex.main=fntsz,
cex.sub=fntsz
),
cex.lab=fntsz,
cex.axis=fntsz,
cex.main=fntsz,
cex.sub=fntsz,
labcex=fntsz
) ;
points(c(mu),c(vu),pch = "+", col="purple")
legend('topright',
c('PDF',expression(paste(theta, "=", "(", mu,sigma^2, ")"))),
bg="transparent",
lty=c(1,NA),
pch=c(NA,"+"),
lwd=c(2.5,2.5),
col=c('blue','purple'),
cex=fntsz
)
}
plot_Normal_pred <- function(mu=0.0,
vu=1.0,
n=10,
mu0=0.0,
n0=1.0,
a0=1.5,
b0=1.5) {
#  mu=0.0;
#  vu=1.0;
#  n=10;
#  mu0=0.0;
#  n0=1.0;
#  a0=1.5;
#  b0=1.5;
fntsz <- 1.5;
op <- par(cex = fntsz)
obs <-get_randnumb(n) ;
obs <- mu+sqrt(vu)*qnorm(obs,mean=0.0,sd=1.0) ;
sufstat <- NormalModel_SufStat(obs,n) ;
x_vu <- seq(from = 0.00, to = 10, length.out = 50) ;
x_mu <- seq(from = -3, to = 3, length.out = 50) ;
x_pred <- seq(from = -6, to = 6, length.out = 50) ;
xnew_pred_pdf <- NormalModel_PDF_pred(x_pred,n,sufstat,mu0,n0,a0,b0) ;
par(mfrow = c(1,1) )
# about xnew_pred_pdf
plot(x_pred,
xnew_pred_pdf,
type = "l",
main='Predictive PDF',
xlab = expression( x[n+1] ),
ylab = expression(paste(p(x[n+1], "|",x[1:n]))),
col="blue" ,
cex.lab=fntsz,
cex.axis=fntsz,
cex.main=fntsz,
cex.sub=fntsz) ;
}
mu=0.0;
vu=1.0;
n=10;
mu0=0.0;
n0=1.0;
a0=1.5;
b0=1.5;
fntsz <- 1.5;
op <- par(cex = fntsz)
obs <-get_randnumb(n) ;
obs <- mu+sqrt(vu)*qnorm(obs,mean=0.0,sd=1.0) ;
sufstat <- NormalModel_SufStat(obs,n) ;
x_vu <- seq(from = 0.00, to = 10, length.out = 50) ;
vu_prior_pdf <- NormalModel_PDF_var_prior(x_vu,a0,b0) ;
vu_post_pdf <- NormalModel_PDF_var_post(x_vu,n,sufstat,mu0,n0,a0,b0) ;
x_mu <- seq(from = -6, to = 6, length.out = 50) ;
mu_prior_pdf <- NormalModel_PDF_mean_prior(x_mu,mu0,n0,a0,b0) ;
mu_post_pdf <- NormalModel_PDF_mean_post(x_mu,n,sufstat,mu0,n0,a0,b0) ;
muvu_prior_pdf <- matrix(rep(NaN,50*50),50,50) ;
muvu_post_pdf <- muvu_prior_pdf ;
for (i in 1:50)
for (j in 1:50) {
muvu_prior_pdf[i,j] <- NormalModel_PDF_meanvar_prior(x_mu[i],x_vu[j],mu0,n0,a0,b0) ;
muvu_post_pdf[i,j] <- NormalModel_PDF_meanvar_post(x_mu[i],x_vu[j],n,sufstat,mu0,n0,a0,b0) ;
}
x_pred <- seq(from = -6, to = 6, length.out = 50) ;
xnew_pred_pdf <- NormalModel_PDF_pred(x_pred,n,sufstat,mu0,n0,a0,b0) ;
#layout( cbind( matrix(1,4,4), matrix(2,4,4), matrix(3,4,4) , matrix(4,4,4) ) )
par(mfrow = c(2 , 2) )
# about mu
y_max <- max(mu_post_pdf, mu_prior_pdf) ;
y_max <- y_max[is.finite(y_max)]
y_max <- max(y_max)
plot(x_mu,
mu_post_pdf,
type = "l",
main='Marginal Posterior vs Prior PDF',
xlab = expression(mu),
ylab = expression(paste(pi,"(",mu,"|",x[1:n],")", " and " ,pi,"(",mu,")")),
col="blue" ,
ylim = c(0,y_max+1) ,
cex.lab=fntsz,
cex.axis=fntsz,
cex.main=fntsz,
cex.sub=fntsz) ;
lines(x_mu,
mu_prior_pdf,
type = "l",
xlab = expression(mu),
ylab = expression(paste(pi,"(",mu,"|",x[1:n],")", " and " ,pi,"(",mu,")")),
col="green" ,
cex.lab=fntsz,
cex.axis=fntsz,
cex.main=fntsz,
cex.sub=fntsz) ;
abline(v=mu,
col="purple")
legend('topright',
c('Posterior','Prior',expression(paste(mu, " real value"))),
bg="transparent",
lty=c(1,1),
lwd=c(2.5,2.5),
col=c('blue','green','purple'),
cex=fntsz
)
# about sigma
y_max <- max(vu_post_pdf, vu_prior_pdf) ;
y_max <- y_max[is.finite(y_max)]
y_max <- max(y_max)
plot(x_vu,
vu_post_pdf,
type = "l",
main='Marginal Posterior vs Prior PDF',
xlab = expression(sigma^2),
ylab = expression(paste(pi,"(",sigma^2,"|",x[1:n],")", " and ",pi,"(",sigma^2,")")),
col="blue" ,
ylim = c(0,y_max+1),
cex.lab=fntsz,
cex.axis=fntsz,
cex.main=fntsz,
cex.sub=fntsz) ;
lines(x_vu,
vu_prior_pdf,
type = "l",
col="green" ,
cex.lab=fntsz,
cex.axis=fntsz,
cex.main=fntsz,
cex.sub=fntsz) ;
abline(v=vu,
col="purple")
legend('topright',
c('Posterior','Prior',expression(paste(sigma^2, " real value"))),
bg="transparent",
lty=c(1,1),
lwd=c(2.5,2.5),
col=c('blue','green','purple'),
cex=fntsz
)
y_max
vu_post_pdf
vu_prior_pdf
vu_post_pdf
y_max
y_max <- max(vu_post_pdf, vu_prior_pdf)
y_max <- y_max[is.finite(y_max)]
y_max
y_max <- max(y_max)
y_max <- max(vu_post_pdf, vu_prior_pdf)
y_max
vu_post_pdf
y_max <- c(vu_post_pdf, vu_prior_pdf) ;
y_max <- y_max[is.finite(y_max)]
y_max <- max(y_max)
y_max
